(()=>{"use strict";var n={79:(n,e,t)=>{t.d(e,{Z:()=>A});var r=t(15),i=t.n(r),o=t(645),a=t.n(o)()(i());a.push([n.id,"html{\n    color: rgb(194, 190, 190);\n}\n\nbutton{\n    background-color: transparent;\n    border: none;\n    color: white;\n}\n\n.mainButtons{\n    margin-top: 20px;\n    width: 150px;\n    height: 20px;\n    color: white;\n    font-size: 30px;\n}\n\n#projectFolder{\n    margin-top: 70px;\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n}\n\n#selection{\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\n\n#header {\n    width: 100%;\n    height: 200px;\n    background-color:rgb(75, 72, 72);\n    display: flex;\n    align-items: flex-end;\n}\n\n#logo{\n    margin-left: 10%;\n    font-size: 30px;\n}\n\n#body{\n    display: flex;\n    height: 1180px;\n}\n\n#selection{\n    background-color: gray ;\n    width: 20%;\n}\n\n#taskDisplay{\n    background-color: rgb(148, 148, 148);\n    width: 80%;\n}\n\n#generalDisplay{\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    width: 60%;\n}\n\n.deleteProj{\n    position: relative;\n    right: 100px;\n    bottom: 12px;\n    font-size: 20px;\n}\n\n.addTaskButton{\n    margin-top: 15px;\n    background: transparent;\n    border: none;\n    font-size: 30px;\n    color: white;\n\n}\n\n.task{\n    display: flex;\n    justify-content: center;\n    flex-direction: row;\n    align-items: center;\n    margin-top: 40px;\n    font-size: 30px;\n    color:white;\n    border-radius: 15%;\n    margin-left:10px;\n}\n\n.taskCancel{\n    margin-right: 20px;\n    border-radius: 10px;\n    font-size: 20px;\n}\n\n.taskCancel:hover{\n    background-color: rgb(243, 104, 104);\n}\n\n.enterClick{\n    margin-left: 20px;\n    border-radius: 10px;\n    font-size: 20px;\n}\n\n.enterClick:hover{\n    background-color: rgb(110, 242, 77);\n}\n\n.taskEnteredPriorityLow{\n    height: 60px;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    margin-top: 40px;\n    font-size: 30px;\n    color:white;\n    margin-left:10px;\n}\n\n.taskEnteredPriorityLow:hover{\n   background-color: rgb(115, 220, 74); ;\n}\n\n.taskEnteredPriorityMedium{\n    height: 60px;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    margin-top: 40px;\n    font-size: 30px;\n    color:white;\n    margin-left:10px;\n}\n\n.taskEnteredPriorityMedium:hover{\n    background-color: rgb(176, 181, 91); ;\n }\n\n\n.taskEnteredPriorityHigh{\n    height: 60px;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    margin-top: 40px;\n    font-size: 30px;\n    color:white;\n    margin-left:10px;\n}\n\n .taskEnteredPriorityHigh:hover{\n    background-color: rgb(255, 145, 81); ;\n }\n\n\n.completedTask{\n    border-radius: 50%;\n    width: 30px;\n    height: 30px;\n    margin-left: 30px;\n    background-color: white;\n}\n\n.taskTextDiv{\n    margin-left: 40px;\n}\n\n.firstDateClass{\n    margin-left: 10px;\n}\n\n.dateFormat{\n    position:fixed;\n    left: 1500px;\n    border-radius: 10px;\n    padding-bottom:10px;\n}","",{version:3,sources:["webpack://./src/todo.css"],names:[],mappings:"AAAA;IACI,yBAAyB;AAC7B;;AAEA;IACI,6BAA6B;IAC7B,YAAY;IACZ,YAAY;AAChB;;AAEA;IACI,gBAAgB;IAChB,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,gBAAgB;IAChB,aAAa;IACb,mBAAmB;IACnB,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;AACvB;;;AAGA;IACI,WAAW;IACX,aAAa;IACb,gCAAgC;IAChC,aAAa;IACb,qBAAqB;AACzB;;AAEA;IACI,gBAAgB;IAChB,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,cAAc;AAClB;;AAEA;IACI,uBAAuB;IACvB,UAAU;AACd;;AAEA;IACI,oCAAoC;IACpC,UAAU;AACd;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,sBAAsB;IACtB,UAAU;AACd;;AAEA;IACI,kBAAkB;IAClB,YAAY;IACZ,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,gBAAgB;IAChB,uBAAuB;IACvB,YAAY;IACZ,eAAe;IACf,YAAY;;AAEhB;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,mBAAmB;IACnB,gBAAgB;IAChB,eAAe;IACf,WAAW;IACX,kBAAkB;IAClB,gBAAgB;AACpB;;AAEA;IACI,kBAAkB;IAClB,mBAAmB;IACnB,eAAe;AACnB;;AAEA;IACI,oCAAoC;AACxC;;AAEA;IACI,iBAAiB;IACjB,mBAAmB;IACnB,eAAe;AACnB;;AAEA;IACI,mCAAmC;AACvC;;AAEA;IACI,YAAY;IACZ,aAAa;IACb,mBAAmB;IACnB,mBAAmB;IACnB,gBAAgB;IAChB,eAAe;IACf,WAAW;IACX,gBAAgB;AACpB;;AAEA;GACG,mCAAmC;AACtC;;AAEA;IACI,YAAY;IACZ,aAAa;IACb,mBAAmB;IACnB,mBAAmB;IACnB,gBAAgB;IAChB,eAAe;IACf,WAAW;IACX,gBAAgB;AACpB;;AAEA;IACI,mCAAmC;CACtC;;;AAGD;IACI,YAAY;IACZ,aAAa;IACb,mBAAmB;IACnB,mBAAmB;IACnB,gBAAgB;IAChB,eAAe;IACf,WAAW;IACX,gBAAgB;AACpB;;CAEC;IACG,mCAAmC;CACtC;;;AAGD;IACI,kBAAkB;IAClB,WAAW;IACX,YAAY;IACZ,iBAAiB;IACjB,uBAAuB;AAC3B;;AAEA;IACI,iBAAiB;AACrB;;AAEA;IACI,iBAAiB;AACrB;;AAEA;IACI,cAAc;IACd,YAAY;IACZ,mBAAmB;IACnB,mBAAmB;AACvB",sourcesContent:["html{\n    color: rgb(194, 190, 190);\n}\n\nbutton{\n    background-color: transparent;\n    border: none;\n    color: white;\n}\n\n.mainButtons{\n    margin-top: 20px;\n    width: 150px;\n    height: 20px;\n    color: white;\n    font-size: 30px;\n}\n\n#projectFolder{\n    margin-top: 70px;\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n}\n\n#selection{\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\n\n#header {\n    width: 100%;\n    height: 200px;\n    background-color:rgb(75, 72, 72);\n    display: flex;\n    align-items: flex-end;\n}\n\n#logo{\n    margin-left: 10%;\n    font-size: 30px;\n}\n\n#body{\n    display: flex;\n    height: 1180px;\n}\n\n#selection{\n    background-color: gray ;\n    width: 20%;\n}\n\n#taskDisplay{\n    background-color: rgb(148, 148, 148);\n    width: 80%;\n}\n\n#generalDisplay{\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    width: 60%;\n}\n\n.deleteProj{\n    position: relative;\n    right: 100px;\n    bottom: 12px;\n    font-size: 20px;\n}\n\n.addTaskButton{\n    margin-top: 15px;\n    background: transparent;\n    border: none;\n    font-size: 30px;\n    color: white;\n\n}\n\n.task{\n    display: flex;\n    justify-content: center;\n    flex-direction: row;\n    align-items: center;\n    margin-top: 40px;\n    font-size: 30px;\n    color:white;\n    border-radius: 15%;\n    margin-left:10px;\n}\n\n.taskCancel{\n    margin-right: 20px;\n    border-radius: 10px;\n    font-size: 20px;\n}\n\n.taskCancel:hover{\n    background-color: rgb(243, 104, 104);\n}\n\n.enterClick{\n    margin-left: 20px;\n    border-radius: 10px;\n    font-size: 20px;\n}\n\n.enterClick:hover{\n    background-color: rgb(110, 242, 77);\n}\n\n.taskEnteredPriorityLow{\n    height: 60px;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    margin-top: 40px;\n    font-size: 30px;\n    color:white;\n    margin-left:10px;\n}\n\n.taskEnteredPriorityLow:hover{\n   background-color: rgb(115, 220, 74); ;\n}\n\n.taskEnteredPriorityMedium{\n    height: 60px;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    margin-top: 40px;\n    font-size: 30px;\n    color:white;\n    margin-left:10px;\n}\n\n.taskEnteredPriorityMedium:hover{\n    background-color: rgb(176, 181, 91); ;\n }\n\n\n.taskEnteredPriorityHigh{\n    height: 60px;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    margin-top: 40px;\n    font-size: 30px;\n    color:white;\n    margin-left:10px;\n}\n\n .taskEnteredPriorityHigh:hover{\n    background-color: rgb(255, 145, 81); ;\n }\n\n\n.completedTask{\n    border-radius: 50%;\n    width: 30px;\n    height: 30px;\n    margin-left: 30px;\n    background-color: white;\n}\n\n.taskTextDiv{\n    margin-left: 40px;\n}\n\n.firstDateClass{\n    margin-left: 10px;\n}\n\n.dateFormat{\n    position:fixed;\n    left: 1500px;\n    border-radius: 10px;\n    padding-bottom:10px;\n}"],sourceRoot:""}]);const A=a},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t=n(e);return e[2]?"@media ".concat(e[2]," {").concat(t,"}"):t})).join("")},e.i=function(n,t,r){"string"==typeof n&&(n=[[null,n,""]]);var i={};if(r)for(var o=0;o<this.length;o++){var a=this[o][0];null!=a&&(i[a]=!0)}for(var A=0;A<n.length;A++){var l=[].concat(n[A]);r&&i[l[0]]||(t&&(l[2]?l[2]="".concat(t," and ").concat(l[2]):l[2]=t),e.push(l))}},e}},15:n=>{function e(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=new Array(e);t<e;t++)r[t]=n[t];return r}n.exports=function(n){var t,r,i=(r=4,function(n){if(Array.isArray(n))return n}(t=n)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var r,i,o=[],a=!0,A=!1;try{for(t=t.call(n);!(a=(r=t.next()).done)&&(o.push(r.value),!e||o.length!==e);a=!0);}catch(n){A=!0,i=n}finally{try{a||null==t.return||t.return()}finally{if(A)throw i}}return o}}(t,r)||function(n,t){if(n){if("string"==typeof n)return e(n,t);var r=Object.prototype.toString.call(n).slice(8,-1);return"Object"===r&&n.constructor&&(r=n.constructor.name),"Map"===r||"Set"===r?Array.from(n):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?e(n,t):void 0}}(t,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=i[1],a=i[3];if(!a)return o;if("function"==typeof btoa){var A=btoa(unescape(encodeURIComponent(JSON.stringify(a)))),l="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(A),s="/*# ".concat(l," */"),c=a.sources.map((function(n){return"/*# sourceURL=".concat(a.sourceRoot||"").concat(n," */")}));return[o].concat(c).concat([s]).join("\n")}return[o].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var o={},a=[],A=0;A<n.length;A++){var l=n[A],s=r.base?l[0]+r.base:l[0],c=o[s]||0,d="".concat(s," ").concat(c);o[s]=c+1;var p=t(d),u={css:l[1],media:l[2],sourceMap:l[3]};-1!==p?(e[p].references++,e[p].updater(u)):e.push({identifier:d,updater:i(u,r),references:1}),a.push(d)}return a}function i(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap)return;t.update(n=e)}else t.remove()}}n.exports=function(n,i){var o=r(n=n||[],i=i||{});return function(n){n=n||[];for(var a=0;a<o.length;a++){var A=t(o[a]);e[A].references--}for(var l=r(n,i),s=0;s<o.length;s++){var c=t(o[s]);0===e[c].references&&(e[c].updater(),e.splice(c,1))}o=l}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r=t.css,i=t.media,o=t.sourceMap;i?n.setAttribute("media",i):n.removeAttribute("media"),o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleTagTransform(r,n)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(r){var i=e[r];if(void 0!==i)return i.exports;var o=e[r]={id:r,exports:{}};return n[r](o,o.exports,t),o.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{let n=()=>{let n=0,e=!1,t="",r=[],i=document.getElementById("taskDisplay"),o=document.createElement("div");o.id="generalDisplay",o.classList="display";let a=document.createElement("button");return a.textContent="Add Task +",a.addEventListener("click",(function(){if(0==n){let i=document.createElement("div");i.classList="task";let a=document.createElement("button");a.addEventListener("click",(function(){o.removeChild(i),n=0}));let A=a;A.textContent="Cancel",A.classList="taskCancel";let l=document.createElement("input");l.setAttribute("type","text"),l.id="taskField",l.maxLength="30",l.placeholder="Enter task here (30 Char Max)",l.style.marginRight="10px",l.style.fontSize="15px";let s=document.createElement("button");s.textContent="Enter",s.classList="enterClick",s.addEventListener("click",(function(){if(""!==document.getElementById("taskField").value&&!1!==e&&"NA"!==t){"low"===t?i.classList="taskEnteredPriorityLow":"medium"===t?i.classList="taskEnteredPriorityMedium":"high"===t&&(i.classList="taskEnteredPriorityHigh");let o=document.createElement("div"),p=document.getElementById("taskField").value;o.textContent=p,o.classList="taskTextDiv";let u=document.createElement("div");u.appendChild(c),u.classList="dateFormat",a.textContent="",a.classList.remove("taskCancel"),a.classList="completedTask",i.removeChild(l),i.removeChild(s),i.removeChild(A),i.removeChild(d),i.appendChild(a),i.appendChild(o),i.appendChild(u),r.push(i),n=0,e=!1,t=""}}));let c=document.createElement("input");c.setAttribute("type","date"),c.classList="firstDateClass";let d=document.createElement("select");d.placeholder="Priority Level",d.required,d.classList="prioritySelection",d.addEventListener("click",(function(n){e=!0,t=n.target.value,console.log(n.target.value)}));let p=document.createElement("option");p.setAttribute("value","NA");let u=document.createTextNode("Select Priority Level");p.appendChild(u);let m=document.createElement("option");m.setAttribute("value","low");let C=document.createTextNode("Low");m.appendChild(C);let h=document.createElement("option");h.setAttribute("value","medium");let f=document.createTextNode("Medium");h.appendChild(f);let g=document.createElement("option");g.setAttribute("value","high");let x=document.createTextNode("High");g.appendChild(x),d.appendChild(p),d.appendChild(m),d.appendChild(h),d.appendChild(g),c.addEventListener("change",(function(n){i.dateLog=n.target.value})),i.appendChild(A),i.appendChild(l),i.appendChild(d),i.appendChild(c),i.appendChild(s),o.appendChild(i),n=1}})),a.classList="addTaskButton",o.appendChild(a),i.appendChild(o),o};class e{constructor(n,e,t){this.name=n,this.tasks=[],this.selectElement=e,this.tasksElement=t}remove(){this.tasksElement.remove()}show(){this.tasksElement.style.display="flex"}hide(){this.tasksElement.style.display="none"}}const r=new class{constructor(){this.projects=[]}addProject(n){this.projects.push(n)}removeProject(n){let e=this.projects.indexOf(n);e>-1&&this.projects.splice(e,1)}hideAll(){for(let n=0;n<this.projects.length;n++)this.projects[n].hide()}displayDefault(){this.projects[0].show()}};var i=t(379),o=t.n(i),a=t(795),A=t.n(a),l=t(569),s=t.n(l),c=t(565),d=t.n(c),p=t(216),u=t.n(p),m=t(589),C=t.n(m),h=t(79),f={};f.styleTagTransform=C(),f.setAttributes=d(),f.insert=s().bind(null,"head"),f.domAPI=A(),f.insertStyleElement=u(),o()(h.Z,f),h.Z&&h.Z.locals&&h.Z.locals;let g=document.getElementById("selection"),x=document.createElement("button");x.classList="mainButtons",x.textContent="Add Project +";let B=!0,I=document.createElement("div");I.id="projectFolder",I.classList="newProjectDiv",x.addEventListener("click",(function(){if(!0===B){B=!1;let t=document.createElement("input");t.setAttribute("type","text"),t.maxLength="13",t.style.marginTop="30px",t.addEventListener("keypress",(function(i){if("Enter"===i.key){r.hideAll();let i=document.createElement("button");i.textContent=t.value,i.classList="mainButtons",I.appendChild(i);let o=document.createElement("button");o.textContent="X",o.classList="deleteProj",o.addEventListener("click",(function(){A.remove(),r.removeProject(A),I.removeChild(i),I.removeChild(o),r.hideAll(),r.displayDefault()})),I.appendChild(o),I.removeChild(t),B=!0;let a=n(),A=new e(t.value,i,a);r.addProject(A),i.addEventListener("click",(function(){r.hideAll(),A.show()}))}})),I.appendChild(t)}}));let v=document.createElement("button");v.classList="mainButtons",v.textContent="General";let b=n(),y=new e("General",v,b);r.addProject(y),v.addEventListener("click",(function(){r.hideAll(),y.show()})),g.appendChild(v),g.appendChild(x),g.appendChild(I)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,